### YamlMime:Course
title: Designing and Implementing Microsoft DevOps solutions
metadata:
  title: 'Course AZ-400T00-A: Designing and Implementing Microsoft DevOps solutions'
  description: 'Course AZ-400T00-A: Designing and Implementing Microsoft DevOps solutions'
uid: course.az-400t00
courseNumber: 'AZ-400T00-A'
hoursToComplete: 120
iconUrl: /media/learn/certification/course.svg
skillsGained:
- skill: Transformation mit geteilten Zielen und Fristen planen
- skill: Wählen Sie ein Projekt aus und identifizieren Sie Projektmetriken und Leistungskennzahlen (KPIs)
- skill: Erstellen Sie ein Team und eine agile Organisationsstruktur
- skill: Entwerfen Sie eine Strategie zur Werkzeugintegration
- skill: Entwerfen einer Lizenzverwaltungsstrategie (z. B. Azure DevOps und GitHub-Nutzer)
- skill: Entwerfen Sie eine Strategie für die End-to-End-Rückverfolgbarkeit von Arbeitselementen zu funktionierender Software
- skill: Entwerfen Sie eine Authentifizierungs- und Zugriffsstrategie
- skill: Entwerfen Sie eine Strategie für die Integration lokaler und cloud-Ressourcen
- skill: Beschreiben Sie die Vorteile der Quellcodeverwaltung
- skill: Beschreiben Sie Azure Repos und GitHub
- skill: Migrieren Sie von TFVC zu Git
- skill: Verwalten Sie die Codequalität, einschließlich technischer Schulden SonarCloud und anderer Tooling-Lösungen
- skill: Bauen Sie organisatorisches Wissen über die Codequalität auf
- skill: Erklären, wie man Git-Repos strukturiert
- skill: Beschreiben Sie Git-Verzweigungsworkflows
- skill: Nutzen Sie Pull-Anfragen für die Zusammenarbeit und Codeüberprüfungen
- skill: Nutzen Sie Git -Hooks für die Automatisierung
- skill: Nutzen Sie Git, um die innere Quelle im gesamten Unternehmen zu fördern
- skill: Erläutern Sie die Rolle von Azure-Pipelines und ihrer Komponenten
- skill: Konfigurieren Sie Agenten für die Verwendung in Azure-Pipelines
- skill: Erklären Sie, warum kontinuierliche Integration wichtig ist
- skill: Implementieren Sie die kontinuierliche Integration mit Hilfe von Azure Pipelines
- skill: Definieren Sie Site Reliability Engineering
- skill: Entwerfen Sie Prozesse, um die Zufriedenheit der Endbenutzer zu messen und das Feedback von Benutzern zu analysieren
- skill: Entwerfen Sie Prozesse zur Automatisierung der Anwendungsanalyse
- skill: Verwalten Sie Warnungen und reduzieren Sie bedeutungslose und nicht umsetzbare Warnungen
- skill: Führen Sie untadelige Rückblicke durch und schaffen Sie eine gerechte Kultur
- skill: Definieren Sie eine Infrastruktur und Konfigurationsstrategien sowie die richtigen Tools für eine Freigabepipeline und Anwendungsinfrastruktur
- skill: Implementieren Sie Compliance und Sicherheit in Ihrer Anwendungsinfrastruktur
- skill: Beschreiben Sie die potenziellen Herausforderungen bei der Integration von Open Source-Software
- skill: Überprüfen Sie Open-Source-Softwarepakete auf Sicherheit und Lizenzkonformität
- skill: Verwalten Sie organisatorische Sicherheits- und Compliance-Richtlinien
- skill: Integrieren Sie Lizenz- und Schwachstellen-Scans in aufgebaute und Bereitstellungleitungen
- skill: Konfigurieren Sie aufgebaute Leitungen für den Zugriff auf Paketsicherheit und Lizenzbewertungen
learningPartnersLink: /learn/certifications/partners
locales:
- en
levels:
- advanced
roles:
- devops-engineer
products:
- azure
- azure-devops
- azure-kubernetes-service
- azure-container-instances
- azure-automation
exams:
- uid: exam.az-400
summary: |-
  Dieser Kurs vermittelt die Kenntnisse und Fähigkeiten zur Entwicklung und Umsetzung von DevOps-Prozessen und -praktiken. Die Teilnehmer lernen, wie sie DevOps planen, Quellcodeverwaltung verwenden, Git für ein Unternehmen skalieren, Artefakte konsolidieren, eine Strategie für das Abhängigkeitsmanagement entwerfen, Geheimnisse verwalten, eine kontinuierliche Integration implementieren, eine Strategie zum Erstellen von Containern implementieren, eine Freigabe-Strategie entwerfen und einen Freigabe-Management-Workflow einrichten, ein Bereitstellungsmuster umsetzen und Feedback-Mechanismen optimieren.

  #### Zielgruppenprofil
  Teilnehmer dieses Kurses interessieren sich für die Implementierung von DevOps-Prozessen oder möchten die Microsoft Azure DevOps Solutions-Zertifizierungsprüfung bestehen.
prerequisitesSection: |-
  Erfolgreiche Teilnehmer verfügen über Vorkenntnisse und Verständnis für&#58;
  - Cloud -Computing-Konzepte, einschließlich Kenntnisse in PaaS, SaaS, und IaaS-Implementierungen.
  - sowohl die Azure-Verwaltung als auch die Azure-Entwicklung mit nachweislichem Fachwissen in mindestens einem dieser Bereiche.
  - Versionskontrolle, agile Softwareentwicklung und grundlegende Prinzipien der Softwareentwicklung. Es wäre hilfreich, Erfahrung in einem Unternehmen zu haben, das Software liefert.
  
  Wenn Sie Azure und Cloud Computing noch nicht kennen, sollten Sie eine der folgenden Ressourcen in Betracht ziehen&#58;
  - Kostenlos online&#58; Azure-Grundlagen (https://docs.microsoft.com/en-us/learn/paths/azure-fundamentals/) 
  - Kurs unter Anleitung eines Dozenten&#58; AZ-900&#58; Azure-Grundlagen (https://docs.microsoft.com/en-us/learn/certifications/courses/az-900t01)
  
  Wenn Sie Azure Administration noch nicht kennen, sollten Sie Folgendes in Betracht ziehen&#58;
  - Kostenlos online&#58; Voraussetzungen für Azure-Administratoren (https://docs.microsoft.com/en-us/learn/paths/az-104-administrator-prerequisites/)
  - Kurse unter Anleitung eines Dozenten&#58; AZ-104&#58; Microsoft Azure Administrator (https://docs.microsoft.com/en-us/learn/certifications/courses/az-104t00) und AZ-010&#58; Azure Administration für AWS SysOps (https://docs.microsoft.com/en-us/learn/certifications/courses/az-010t00)
  
  Wenn Sie Azure Developer noch nicht kennen, sollten Sie Folgendes in Betracht ziehen&#58;
  - Kostenlos online&#58; Erstellen Sie serverlose Anwendungen (https://docs.microsoft.com/en-us/learn/paths/create-serverless-applications/)
  - Kurs unter Anleitung eines Dozenten&#58; AZ-204&#58; Entwickeln von Lösungen für Microsoft Azure (https://docs.microsoft.com/en-us/learn/certifications/courses/az-204t00) und AZ-020&#58; Microsoft Azure-Lösungen für AWS-Entwickler (https://docs.microsoft.com/en-us/learn/certifications/courses/az-020t00)
outlineSection: |-
  ### Modul 1&#58; DevOps-Planung
  #### Lektionen
  - Transformationsplanung
  - Projektauswahl
  - Teamstrukturen
  - Migration zu Azure DevOps

  #### Übung&#58; Agile Planunng and Portfolio-Management mit Azure-Boards

  Nach Abschluss dieses Moduls sind die Teilnehmer in der Lage&#58;
  - die Transformation mit gemeinsamen Zielen und Zeitplänen zu planen
  - ein Projekt auszuwählen und die Projektmetriken und Leistungskennzahlen zu identifizieren.
  - ein Team und eine agile Organisationsstruktur zu erstellen
  - eine Strategie zur Integration von Tools zu erstellen
  - eine Strategie zur Lizenzverwaltung (z. B. Azure DevOps und GitHub-Benutzer) zu entwerfen
  - eine Strategie für die End-to-End-Rückverfolgbarkeit von Arbeitselementen zu funktionierender Software zu entwerfen
  - eine Authentifizierungs- und Zugriffsstrategie zu entwerfen
  - eine Strategie für die Integration lokaler und cloud-Ressourcen zu entwerfen
  
  
  ### Modul 2&#58; Erste Schritte mit der Quellcodeverwaltung 
  #### Lektionen
  - Was ist Quellcodeverwaltung?
  - Vorteile der Quellcodeverwaltung
  - Arten von Quellcodeverwaltungssystemen
  - Einführung in Azure Repos
  - Einführung in GitHub
  - Migration von Team Foundation Version Control (TFVC) zu Git in Azure Repos
  
  #### Übung&#58; Versionskontrolle mit Git in Azure Repos
  
  Nach Abschluss dieses Moduls sind die Teilnehmer in der Lage&#58;
  - die Vorteile der Quellcodeverwaltung zu beschreiben
  - Azure und GitHub zu beschreiben
  - von TFVC zu Git zu migrieren
  
  
  ### Modul 3&#58; Verwalten technischer Schulden
  #### Lektionen
  - Identifizierung technischen Schulden
  - Wissensaustausch innerhalb von Teams
  - Modernisierung von Entwicklungsumgebungen mit Codespaces
  
  #### Übung&#58; Teilen von Teamwissen mit Azure Project Wikis
  
  Nach Abschluss dieses Moduls sind die Teilnehmer in der Lage&#58;
  - die Codequalität, einschließlich technischer Schulden, SonarCloud und anderer Lösungen für Tools zu verwalten
  - Organisatorische Kenntnisse zur Codequalität aufzubauen
  
  
  ### Modul 4&#58; Arbeiten mit Git für Enterprise DevOps
  #### Lektionen
  - So strukturieren Sie Ihr Git Repo
  - Git Branching Workflows
  - Zusammenarbeit mit Pull-Anforderungen in Azure Repos
  - Warum man sich um Git Hooks kümmern sollte
  - Förderung der inneren Quelle
  - Verwalten von Git -Repositorien
  
  #### Übung&#58; Versionskontrolle mit Git in Azure Repos
  
  Nach Abschluss dieses Moduls sind die Teilnehmer in der Lage&#58;
  - zu erläutern, wie Git -Repositorien strukturiert werden
  - Git -Verzweigungsworkflows zu beschreiben
  - Pull-Anfragen für die Zusammenarbeit und Codeüberprüfungen zu nutzen
  - Git -Hooks für die Automatisierung zu nutzen
  - Git zu verwenden, um die innere Quelle im gesamten Unternehmen zu fördern
  
  ### Modul 5&#58; Konfigurieren von Azure-Azure Pipelines
  #### Lektionen
  - Das Konzept der Pipelines in DevOps
  - Azure Pipelines
  - Bewerten Sie die Verwendung von gehosteten im Vergleich zu selbst gehosteten Agenten
  - Agentenpools
  - Pipelines und Parallelität
  - Azure DevOps und Open Source-Projekte (öffentliche Projekte)
  - Azure Pipelines YAML im Vergleich zu Visual Designer
  
  #### Übung&#58; Agentenpools konfigurieren und Pipeline-Stile verstehen
  
  Nach Abschluss dieses Moduls sind die Teilnehmer in der Lage&#58;
  - die Rolle von Azure Pipelines und ihrer Komponenten zu erläutern
  - Konfigurieren Sie Agenten für die Verwendung in Azure Pipelines zu konfigurieren
  
  
  ### Modul 6&#58; Kontinuierliche Integration mith Hlfe von Azure Pipelines implementieren
  #### Lektionen
  - Übersicht über die kontinuierliche Integration
  - Implementierung einer Build-Strategie
  - Integration in Azure Pipelines
  - Integration der externen Quellcodeverwaltung in Azure Pipelines
  - Richten Sie selbst gehostete Agenten ein
  
  #### Übung&#58; Aktivieren der kontinuierlichen Integration in Azure Pipelines
  
  #### Übung&#58; Externe Quellcodeverwaltung in Azure Pipelines integrieren
  
  Nach Abschluss dieses Moduls sind die Teilnehmer in der Lage&#58;
  - zu erläutern, warum kontinuierliche Integration wichtig ist
  - die kontinuierliche Integration mit Hilfe von Azure Pipelines zu implementieren
  
  
  ### Modul 7&#58; Verwalten von Anwendungskonfiguration und Geheimnissen
  #### Lektionen
  - Einführung in die Sicherheit
  - Implementieren eines sicheren Entwicklungsprozesses
  - Überdenken der Anwendungskonfigurationsdaten
  - Verwalten von Geheimnissen, Token und Zertifikate
  - Integration in Identitätsmanagementsysteme
  - Implementieren der Anwendungskonfiguration
  
  #### Übung&#58; Integrieren von Azure Key Vault in Azure DevOps
  
  Nach Abschluss dieses Moduls sind die Teilnehmer in der Lage&#58;
  - die Anwendungskonfiguration und Geheimnisse zu verwalten
  - Azure Key Vault in eine Pipeline zu integrieren
  
  
  ### Modul 8&#58; Kontinuierliche Integration mit GitHub-Aktionen implementieren
  #### Lektionen
  - GitHub -Aktionen
  - Kontinuierliche Integration mit GitHub-Aktionen
  - Sichern von Geheimnissen für GitHub -Aktionen
  
  #### Übung&#58; Kontinuierliche Integration von GitHub -Aktionen
  
  Nach Abschluss dieses Moduls sind die Teilnehmer in der Lage&#58;
  - mit GitHub -Aktionen und Workflows zu erstellen und damit zu arbeiten
  - die kontinuierliche Integration mit GitHub-Aktionen zu implementieren
  
  
  ### Module 9&#58; Entwerfen und Implementieren einer Dependency-Management-Strategie
  #### Lektionen
  - Paketierung von Abhängigkeiten
  - Paket-Management
  - Migrieren und Konsolidieren von Artefakten
  - Paketsicherheit
  - Implementieren einer Versionierungsstrategie
  
  #### Übung&#58; Paketverwaltung mit Azure -Artefakten
  
  Nach Abschluss dieses Moduls sind die Teilnehmer in der Lage&#58;
  - Tools und Praktiken für die Artefaktverwaltung zu empfehlen
  - Gemeinsame Pakete abstrahieren, um die gemeinsame Nutzung und Wiederverwendung zu ermöglichen
  - Artefakte zu migrieren und zu konsolidieren
  - Maßnahmen zur Versionskontrolle zu migrieren und zu integrieren
  
  
  ### Modul 10&#58; Entwerfen einer Release-Strategie
  #### Lektionen
  - Einführung in die kontinuierliche Lieferung
  - Strategieempfehlungen veröffentlichen
  - Aufbau einer hochwertigen Release-Pipeline
  - Auswahl des richtigen Release Management Tools
  
  #### Übung&#58; Steuern von Bereitstellungen mit Hilfe von Release Gates
  
  #### Übung&#58; Erstellen eines Release-Dashboards
  
  Nach Abschluss dieses Moduls sind die Teilnehmer in der Lage&#58;
  - zwischen einer Version und einer Bereitstellung zu unterscheiden
  - die Komponenten einer Release-Pipeline zu definieren
  - zu erklären, was bei der Gestaltung Ihrer Release-Strategie zu beachten ist
  - ein Release im Vergleich zu einem Release-Prozess zu klassifizieren und zu beschreiben, wie man die Qualität beider steuern könnte
  - das Prinzip der Release Gates und den Umgang mit Release Notes und Dokumentation zu beschreiben
  - ein Release-Management-Tool auszuwählen

